[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\sartnagpal\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\sartnagpal\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Amazon.com Inc. Java 1.8.0_292)
[debug]       Load.loadUnit: plugins took 103.7764ms
[debug]       Load.loadUnit: defsScala took 0.3227ms
[debug] [Loading] Scanning directory C:\Users\sartnagpal\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sartnagpal\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.5158 ms
[debug]           Load.resolveProject(global-plugins) took 61.4822ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\sartnagpal\.sbt\1.0\plugins, plugins: List(<none>))) took 129.4027ms
[debug] [Loading] Done in C:\Users\sartnagpal\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 157.8296ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3898ms
[debug]     Load.loadUnit(file:/C:/Users/sartnagpal/.sbt/1.0/plugins/, ...) took 272.7917ms
[debug]   Load.apply: load took 469.5386ms
[debug]   Load.apply: resolveProjects took 6.6643ms
[debug]   Load.apply: finalTransforms took 62.4215ms
[debug]   Load.apply: config.delegates took 8.4301ms
[debug]   Load.apply: Def.make(settings)... took 588.059ms
[debug]   Load.apply: structureIndex took 97.7624ms
[debug]   Load.apply: mkStreams took 2.2981ms
[info] loading global plugins from C:\Users\sartnagpal\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 10041.6454ms
[debug]           Load.loadUnit: plugins took 41.3927ms
[debug]           Load.loadUnit: defsScala took 0.0095ms
[debug] [Loading] Scanning directory C:\Scala\AkkaAssignment\project
[debug]             Load.loadUnit: mkEval took 10.5569ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Scala\AkkaAssignment\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2423 ms
[info] loading settings for project akkaassignment-build from idea1.sbt ...
[debug]               Load.resolveProject(akkaassignment-build) took 5.1713ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akkaassignment-build, base: C:\Scala\AkkaAssignment\project, plugins: List(<none>))) took 8.17ms
[debug] [Loading] Done in C:\Scala\AkkaAssignment\project, returning: (akkaassignment-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 186.1679ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.732ms
[debug]         Load.loadUnit(file:/C:/Scala/AkkaAssignment/project/, ...) took 237.6453ms
[debug]       Load.apply: load took 241.2333ms
[debug]       Load.apply: resolveProjects took 0.261ms
[debug]       Load.apply: finalTransforms took 9.2968ms
[debug]       Load.apply: config.delegates took 0.4376ms
[debug]       Load.apply: Def.make(settings)... took 150.8654ms
[debug]       Load.apply: structureIndex took 26.5139ms
[debug]       Load.apply: mkStreams took 0.0047ms
[info] loading project definition from C:\Scala\AkkaAssignment\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 928.7472ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Scala\AkkaAssignment
[debug]       Load.loadUnit: mkEval took 0.365ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Scala\AkkaAssignment, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.187 ms
[info] loading settings for project akkaassignment from build.sbt ...
[debug]         Load.resolveProject(akkaassignment) took 28.8696ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akkaassignment, base: C:\Scala\AkkaAssignment, plugins: List(<none>))) took 33.7102ms
[debug] [Loading] Done in C:\Scala\AkkaAssignment, returning: (akkaassignment)
[debug]     Load.loadUnit: loadedProjectsRaw took 132.6088ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.3693ms
[debug]   Load.loadUnit(file:/C:/Scala/AkkaAssignment/, ...) took 1068.956ms
[debug] Load.apply: load took 1071.8685ms
[debug] Load.apply: resolveProjects took 0.1309ms
[debug] Load.apply: finalTransforms took 20.7354ms
[debug] Load.apply: config.delegates took 0.3068ms
[debug] Load.apply: Def.make(settings)... took 111.859ms
[debug] Load.apply: structureIndex took 24.0866ms
[debug] Load.apply: mkStreams took 0.005ms
[info] set current project to AkkaAssignment (in build file:/C:/Scala/AkkaAssignment/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61761 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61761, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to AkkaAssignment (in build file:/C:/Scala/AkkaAssignment/)
[debug] > Exec(idea-shell, None, None)
