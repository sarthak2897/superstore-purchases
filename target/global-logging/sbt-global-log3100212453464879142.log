[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\sartnagpal\AppData\Local\Temp\idea11.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\sartnagpal\AppData\Local\Temp\idea11.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Amazon.com Inc. Java 1.8.0_292)
[debug]       Load.loadUnit: plugins took 148.7905ms
[debug]       Load.loadUnit: defsScala took 0.6308ms
[debug] [Loading] Scanning directory C:\Users\sartnagpal\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sartnagpal\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 36.6349 ms
[debug]           Load.resolveProject(global-plugins) took 108.9026ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\sartnagpal\.sbt\1.0\plugins, plugins: List(<none>))) took 196.8663ms
[debug] [Loading] Done in C:\Users\sartnagpal\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 233.0718ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.8437ms
[debug]     Load.loadUnit(file:/C:/Users/sartnagpal/.sbt/1.0/plugins/, ...) took 401.8255ms
[debug]   Load.apply: load took 753.7996ms
[debug]   Load.apply: resolveProjects took 15.5885ms
[debug]   Load.apply: finalTransforms took 114.9618ms
[debug]   Load.apply: config.delegates took 23.7689ms
[debug]   Load.apply: Def.make(settings)... took 907.5239ms
[debug]   Load.apply: structureIndex took 144.8653ms
[debug]   Load.apply: mkStreams took 3.0966ms
[info] loading global plugins from C:\Users\sartnagpal\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4608.4546ms
[debug]           Load.loadUnit: plugins took 47.2718ms
[debug]           Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Scala\AkkaAssignment\project
[debug]             Load.loadUnit: mkEval took 16.0909ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Scala\AkkaAssignment\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.4703 ms
[info] loading settings for project akkaassignment-build from idea11.sbt ...
[debug]               Load.resolveProject(akkaassignment-build) took 8.9503ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akkaassignment-build, base: C:\Scala\AkkaAssignment\project, plugins: List(<none>))) took 14.6451ms
[debug] [Loading] Done in C:\Scala\AkkaAssignment\project, returning: (akkaassignment-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 295.7258ms
[debug]           Load.loadUnit: cleanEvalClasses took 11.4098ms
[debug]         Load.loadUnit(file:/C:/Scala/AkkaAssignment/project/, ...) took 356.3119ms
[debug]       Load.apply: load took 360.9895ms
[debug]       Load.apply: resolveProjects took 0.7124ms
[debug]       Load.apply: finalTransforms took 29.8837ms
[debug]       Load.apply: config.delegates took 0.9611ms
[debug]       Load.apply: Def.make(settings)... took 185.664ms
[debug]       Load.apply: structureIndex took 37.452ms
[debug]       Load.apply: mkStreams took 0.006ms
[info] loading project definition from C:\Scala\AkkaAssignment\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1059.5645ms
[debug]     Load.loadUnit: defsScala took 0.0067ms
[debug] [Loading] Scanning directory C:\Scala\AkkaAssignment
[debug]       Load.loadUnit: mkEval took 0.6569ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Scala\AkkaAssignment, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.6586 ms
[info] loading settings for project akkaassignment from build.sbt ...
[debug]         Load.resolveProject(akkaassignment) took 42.7303ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akkaassignment, base: C:\Scala\AkkaAssignment, plugins: List(<none>))) took 48.5599ms
[debug] [Loading] Done in C:\Scala\AkkaAssignment, returning: (akkaassignment)
[debug]     Load.loadUnit: loadedProjectsRaw took 3124.5257ms
[debug]     Load.loadUnit: cleanEvalClasses took 21.2526ms
[debug]   Load.loadUnit(file:/C:/Scala/AkkaAssignment/, ...) took 4206.7514ms
[debug] Load.apply: load took 4212.3329ms
[debug] Load.apply: resolveProjects took 0.4835ms
[debug] Load.apply: finalTransforms took 66.518ms
[debug] Load.apply: config.delegates took 0.5579ms
[debug] Load.apply: Def.make(settings)... took 192.6781ms
[debug] Load.apply: structureIndex took 46.3805ms
[debug] Load.apply: mkStreams took 0.0066ms
[info] set current project to AkkaAssignment (in build file:/C:/Scala/AkkaAssignment/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63538 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63538, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to AkkaAssignment (in build file:/C:/Scala/AkkaAssignment/)
[debug] > Exec(idea-shell, None, None)
